- name: Create data dir
  become: true
  ansible.builtin.file:
    path: "{{ vaultwarden_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0770"

- name: Install podman
  become: true
  ansible.builtin.apt:
    update_cache: true
    name:
      - podman

- name: Generate Admin Token
  when: vaultwarden_admin_pass != ""
  delegate_to: localhost
  ansible.builtin.shell:
    cmd: "set -o pipefail && echo -n {{ vaultwarden_admin_pass }} | argon2 \"$(openssl rand -base64 32)\" -e -id -k 65540 -t 3 -p 4"
    executable: /usr/bin/bash
  changed_when: false
  register: admin_token

- name: Run vaultwarden
  become: true
  containers.podman.podman_container:
    name: vaultwarden.pod
    image: docker.io/vaultwarden/server:latest
    pull: always
    recreate: "{{ vaultwarden_force_reload }}"
    ports:
      - 127.0.0.1:{{ vaultwarden_port }}:80
    volume:
      - /vaultwarden-data/:/data/
    env:
      ADMIN_TOKEN: "{{ admin_token.stdout | default(None) }}"
      DOMAIN: "{{ vaultwarden_url }}"
      SIGNUPS_ALLOWED: false
      PUSH_ENABLED: true
      PUSH_INSTALLATION_ID: "{{ vaultwarden_push_id }}"
      PUSH_INSTALLATION_KEY: "{{ vaultwarden_push_key }}"
      PUSH_RELAY_URI: "{{ 'https://api.bitwarden.eu' if vaultwarden_is_eu else None }}"
      PUSH_IDENTITY_URI: "{{ 'https://identity.bitwarden.eu' if vaultwarden_is_eu else None }}"
      SMTP_HOST: "{{ vaultwarden_smtp_server }}"
      SMTP_FROM: "vaultwarden@{{ domain }}"
      SMTP_PORT: "{{ vaultwarden_smtp_port }}"
      SMTP_SECURITY: force_tls
      SMTP_USERNAME: "{{ vaultwarden_smtp_user }}"
      SMTP_PASSWORD: "{{ vaultwarden_smtp_pass }}"
      SMTP_AUTH_MECHANISM: "Login"
      SHOW_PASSWORD_HINT: false

- name: Setup service
  become: true
  ansible.builtin.copy:
    src: vaultwarden.pod.service
    dest: /etc/systemd/system/vaultwarden.pod.service
    mode: "0755"
    owner: root
    group: root

- name: Start podman service
  become: true
  ansible.builtin.systemd_service:
    daemon_reload: true
    name: vaultwarden.pod
    state: started
    enabled: true

- name: Add proxy for domain
  vars:
    nginx_service_external: false
    nginx_service_subdomain: "{{ vaultwarden_subdomain }}"
    nginx_service_location: http://localhost:8081
  ansible.builtin.include_role:
    name: nginx-proxy-service

# Setup backups
- name: Create backups dir
  become: true
  ansible.builtin.file:
    state: directory
    path: /backups
    mode: "0700"
    owner: root
    group: root

- name: Create vaultwarden backups dir
  become: true
  ansible.builtin.file:
    state: directory
    path: /backups/vaultwarden
    mode: "0700"
    owner: root
    group: root

- name: Create cron job
  become: true
  ansible.builtin.cron:
    user: root
    hour: "5"
    minute: "7"
    cron_file: vaultwarden-backup
    name: backup vaultwarden data
    job: >
      /usr/bin/systemctl stop vaultwarden.pod ;
      bckp="/backups/vaultwarden/vaultwarden-data_$(/usr/bin/date '+%Y%m%d-%H%M').tar.gz" ;
      /usr/bin/tar -czf "$bckp" --mode "0640" -C / {{ vaultwarden_data_dir.split('/')[1] }} ;
      /usr/bin/find /backups/vaultwarden -type f | /usr/bin/sort | /usr/bin/head -n -10 | /usr/bin/xargs /bin/rm
      /usr/bin/systemctl start vaultwarden.pod
